{
  "validation_summary": {
    "total_tests": 21,
    "passed": 20,
    "failed": 1,
    "warnings": 0,
    "success_rate": 95.24,
    "timestamp": "2025-08-02T10:10:07.502687"
  },
  "test_results": [
    {
      "test": "booking_date Priority",
      "status": "PASS",
      "details": "booking_date checked before date_order",
      "timestamp": "2025-08-02T10:10:07.461976"
    },
    {
      "test": "Dynamic Date Field",
      "status": "PASS",
      "details": "Date filtering uses dynamic field selection",
      "timestamp": "2025-08-02T10:10:07.462281"
    },
    {
      "test": "Date Range Implementation",
      "status": "PASS",
      "details": "Date range filtering correctly implemented",
      "timestamp": "2025-08-02T10:10:07.462535"
    },
    {
      "test": "Sales Type Field Check",
      "status": "PASS",
      "details": "sale_order_type_id existence check implemented",
      "timestamp": "2025-08-02T10:10:07.462778"
    },
    {
      "test": "Sales Type Filtering",
      "status": "PASS",
      "details": "sale_order_type_id filtering implemented",
      "timestamp": "2025-08-02T10:10:07.462857"
    },
    {
      "test": "Sales Types Backend Method",
      "status": "PASS",
      "details": "get_sales_types method found",
      "timestamp": "2025-08-02T10:10:07.462904"
    },
    {
      "test": "amount_total Ranking",
      "status": "PASS",
      "details": "amount_total used in ranking",
      "timestamp": "2025-08-02T10:10:07.463035"
    },
    {
      "test": "price_unit Field Inclusion",
      "status": "PASS",
      "details": "price_unit included in fields to read",
      "timestamp": "2025-08-02T10:10:07.463093"
    },
    {
      "test": "Amount Field Priority",
      "status": "PASS",
      "details": "amount_total has priority for ranking",
      "timestamp": "2025-08-02T10:10:07.463139"
    },
    {
      "test": "Draft State Amount",
      "status": "PASS",
      "details": "Draft orders use amount_total",
      "timestamp": "2025-08-02T10:10:07.463258"
    },
    {
      "test": "Sale State Amount",
      "status": "PASS",
      "details": "Sale orders use amount_total",
      "timestamp": "2025-08-02T10:10:07.463445"
    },
    {
      "test": "Invoice State Amount",
      "status": "PASS",
      "details": "Invoiced orders consider invoice_amount",
      "timestamp": "2025-08-02T10:10:07.463729"
    },
    {
      "test": "Quotation State Filter",
      "status": "PASS",
      "details": "Quotation state filtering: draft, sent",
      "timestamp": "2025-08-02T10:10:07.464292"
    },
    {
      "test": "Sale State Filter",
      "status": "PASS",
      "details": "Sale state filtering: sale",
      "timestamp": "2025-08-02T10:10:07.464511"
    },
    {
      "test": "Invoice Status Filter",
      "status": "PASS",
      "details": "Invoice status filtering: invoiced",
      "timestamp": "2025-08-02T10:10:07.464743"
    },
    {
      "test": "Separate State Domains",
      "status": "PASS",
      "details": "All state filters implemented: draft=2, sale=6, invoice=4",
      "timestamp": "2025-08-02T10:10:07.464953"
    },
    {
      "test": "State-Based Amount Function",
      "status": "PASS",
      "details": "getAmountFieldForState function implemented",
      "timestamp": "2025-08-02T10:10:07.500217"
    },
    {
      "test": "State-Specific Mapping",
      "status": "PASS",
      "details": "State-specific field mapping implemented",
      "timestamp": "2025-08-02T10:10:07.500497"
    },
    {
      "test": "Sales Type Domain",
      "status": "PASS",
      "details": "Sales type domain building implemented",
      "timestamp": "2025-08-02T10:10:07.500699"
    },
    {
      "test": "Method Signature Match",
      "status": "FAIL",
      "details": "Backend method signature not found",
      "timestamp": "2025-08-02T10:10:07.501160"
    },
    {
      "test": "Sales Type Integration",
      "status": "PASS",
      "details": "Sales type integration between frontend and backend",
      "timestamp": "2025-08-02T10:10:07.501307"
    }
  ],
  "errors": [
    {
      "test": "Method Signature Match",
      "status": "FAIL",
      "details": "Backend method signature not found",
      "timestamp": "2025-08-02T10:10:07.501160"
    }
  ],
  "data_population_requirements": {
    "date_range_filter": "booking_date field with fallback to date_order",
    "type_filter": "sale_order_type_id from le_sale_type module",
    "ranking_fields": "amount_total (primary), price_unit (secondary)",
    "draft_orders": "state in [draft, sent] using amount_total",
    "confirmed_orders": "state = sale using amount_total",
    "invoiced_orders": "invoice_status = invoiced using invoice_amount (preferred) or amount_total"
  },
  "field_priorities": {
    "date_field": "booking_date > date_order",
    "amount_field": "amount_total (priority 1), invoice_amount (for invoiced), price_unit (for ranking)",
    "type_field": "sale_order_type_id (if le_sale_type available)"
  }
}