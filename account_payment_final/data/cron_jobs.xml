<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data noupdate="1">

        <!-- Cleanup Old Verification Logs -->
        <record id="cron_cleanup_verification_logs" model="ir.cron">
            <field name="name">Payment Voucher: Cleanup Old Verification Logs</field>
            <field name="model_id" ref="model_payment_verification_log"/>
            <field name="state">code</field>
            <field name="code">model.cleanup_old_logs(days=90)</field>
            <field name="interval_number">1</field>
            <field name="interval_type">weeks</field>
            <field name="numbercall">-1</field>
            <field name="active">True</field>
            <field name="doall">False</field>
        </record>

        <!-- Generate QR Codes for Missing Tokens -->
        <record id="cron_generate_missing_qr_tokens" model="ir.cron">
            <field name="name">Payment Voucher: Generate Missing QR Tokens</field>
            <field name="model_id" ref="account.model_account_payment"/>
            <field name="state">code</field>
            <field name="code">
payments = model.search([
    ('qr_verification_token', '=', False),
    ('approval_state', 'not in', ['draft', 'cancelled']),
    ('voucher_number', '!=', False)
])
for payment in payments:
    payment.qr_verification_token = payment._generate_verification_token()
            </field>
            <field name="interval_number">1</field>
            <field name="interval_type">days</field>
            <field name="numbercall">-1</field>
            <field name="active">True</field>
            <field name="doall">False</field>
        </record>

        <!-- Send Workflow Reminder Notifications -->
        <record id="cron_workflow_reminders" model="ir.cron">
            <field name="name">Payment Voucher: Send Workflow Reminders</field>
            <field name="model_id" ref="account.model_account_payment"/>
            <field name="state">code</field>
            <field name="code">
# Find payments pending for more than 2 days
from datetime import datetime, timedelta
cutoff_date = datetime.now() - timedelta(days=2)

# Pending reviews
pending_reviews = model.search([
    ('approval_state', '=', 'under_review'),
    ('submitted_date', '&lt;=', cutoff_date)
])

# Pending approvals
pending_approvals = model.search([
    ('approval_state', 'in', ['for_approval', 'for_authorization']),
    ('create_date', '&lt;=', cutoff_date)
])

# Send reminder notifications
for payment in (pending_reviews + pending_approvals):
    payment._send_workflow_reminder()
            </field>
            <field name="interval_number">1</field>
            <field name="interval_type">days</field>
            <field name="numbercall">-1</field>
            <field name="active">False</field>  <!-- Disabled by default -->
            <field name="doall">False</field>
        </record>

    </data>
</odoo>